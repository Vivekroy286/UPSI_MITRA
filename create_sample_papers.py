import os
import django

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'upsi_test.settings')
django.setup()

from mocktest.models import TestPaper, Question

# Create 10 test papers
papers_data = [
    {"title": "UPSI Mock Test - Paper 1", "description": "Comprehensive test covering all four sections with balanced difficulty level"},
    {"title": "UPSI Mock Test - Paper 2", "description": "Focus on current affairs and constitutional law with moderate difficulty"},
    {"title": "UPSI Mock Test - Paper 3", "description": "Emphasis on numerical ability and logical reasoning skills"},
    {"title": "UPSI Mock Test - Paper 4", "description": "Hindi language proficiency and general knowledge assessment"},
    {"title": "UPSI Mock Test - Paper 5", "description": "Advanced level test with challenging questions from all sections"},
    {"title": "UPSI Mock Test - Paper 6", "description": "Practice test focusing on UP state-specific knowledge"},
    {"title": "UPSI Mock Test - Paper 7", "description": "Balanced mix of easy to moderate level questions"},
    {"title": "UPSI Mock Test - Paper 8", "description": "Recent pattern based questions with updated syllabus"},
    {"title": "UPSI Mock Test - Paper 9", "description": "Time management focused test with quick-solve questions"},
    {"title": "UPSI Mock Test - Paper 10", "description": "Final revision test covering entire UPSI syllabus"}
]

# Sample questions for each section
sample_questions = {
    'general_hindi': [
        {
            'text': '‡§®‡§ø‡§Æ‡•ç‡§®‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§Æ‡•á‡§Ç ‡§∏‡•á ‡§ï‡•å‡§® ‡§∏‡§æ ‡§∂‡§¨‡•ç‡§¶ "‡§Ü‡§ï‡§æ‡§∂" ‡§ï‡§æ ‡§™‡§∞‡•ç‡§Ø‡§æ‡§Ø‡§µ‡§æ‡§ö‡•Ä ‡§π‡•à?',
            'option_a': '‡§™‡•É‡§•‡•ç‡§µ‡•Ä',
            'option_b': '‡§ó‡§ó‡§®',
            'option_c': '‡§∏‡§Æ‡•Å‡§¶‡•ç‡§∞',
            'option_d': '‡§™‡§∞‡•ç‡§µ‡§§',
            'correct_answer': 'B'
        },
        {
            'text': '"‡§∏‡•Ç‡§∞‡•ç‡§Ø" ‡§ï‡§æ ‡§µ‡§ø‡§≤‡•ã‡§Æ ‡§∂‡§¨‡•ç‡§¶ ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?',
            'option_a': '‡§ö‡§®‡•ç‡§¶‡•ç‡§∞',
            'option_b': '‡§§‡§æ‡§∞‡§æ',
            'option_c': '‡§™‡•ç‡§∞‡§ï‡§æ‡§∂',
            'option_d': '‡§Ö‡§Ç‡§ß‡§ï‡§æ‡§∞',
            'correct_answer': 'A'
        }
    ],
    'law_constitution': [
        {
            'text': '‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§∏‡§Ç‡§µ‡§ø‡§ß‡§æ‡§® ‡§Æ‡•á‡§Ç ‡§ï‡•Å‡§≤ ‡§ï‡§ø‡§§‡§®‡•á ‡§Ö‡§®‡•Å‡§ö‡•ç‡§õ‡•á‡§¶ ‡§π‡•à‡§Ç?',
            'option_a': '395',
            'option_b': '396',
            'option_c': '448',
            'option_d': '450',
            'correct_answer': 'C'
        },
        {
            'text': '‡§≠‡§æ‡§∞‡§§ ‡§ï‡§æ ‡§∏‡§∞‡•ç‡§µ‡•ã‡§ö‡•ç‡§ö ‡§®‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§≤‡§Ø ‡§ï‡§π‡§æ‡§Å ‡§∏‡•ç‡§•‡§ø‡§§ ‡§π‡•à?',
            'option_a': '‡§Æ‡•Å‡§Ç‡§¨‡§à',
            'option_b': '‡§®‡§à ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä',
            'option_c': '‡§ï‡•ã‡§≤‡§ï‡§æ‡§§‡§æ',
            'option_d': '‡§ö‡•á‡§®‡•ç‡§®‡§à',
            'correct_answer': 'B'
        }
    ],
    'general_knowledge': [
        {
            'text': '‡§â‡§§‡•ç‡§§‡§∞ ‡§™‡•ç‡§∞‡§¶‡•á‡§∂ ‡§ï‡•Ä ‡§∞‡§æ‡§ú‡§ß‡§æ‡§®‡•Ä ‡§ï‡•å‡§® ‡§∏‡•Ä ‡§π‡•à?',
            'option_a': '‡§ï‡§æ‡§®‡§™‡•Å‡§∞',
            'option_b': '‡§Ü‡§ó‡§∞‡§æ',
            'option_c': '‡§≤‡§ñ‡§®‡§ä',
            'option_d': '‡§µ‡§æ‡§∞‡§æ‡§£‡§∏‡•Ä',
            'correct_answer': 'C'
        },
        {
            'text': '‡§≠‡§æ‡§∞‡§§ ‡§ï‡•á ‡§™‡•ç‡§∞‡§•‡§Æ ‡§™‡•ç‡§∞‡§ß‡§æ‡§®‡§Æ‡§Ç‡§§‡•ç‡§∞‡•Ä ‡§ï‡•å‡§® ‡§•‡•á?',
            'option_a': '‡§Æ‡§π‡§æ‡§§‡•ç‡§Æ‡§æ ‡§ó‡§æ‡§Ç‡§ß‡•Ä',
            'option_b': '‡§ú‡§µ‡§æ‡§π‡§∞‡§≤‡§æ‡§≤ ‡§®‡•á‡§π‡§∞‡•Ç',
            'option_c': '‡§∏‡§∞‡§¶‡§æ‡§∞ ‡§™‡§ü‡•á‡§≤',
            'option_d': '‡§°‡•â. ‡§∞‡§æ‡§ú‡•á‡§Ç‡§¶‡•ç‡§∞ ‡§™‡•ç‡§∞‡§∏‡§æ‡§¶',
            'correct_answer': 'B'
        }
    ],
    'numerical_mental': [
        {
            'text': '25 ‡§ï‡§æ 40% ‡§ï‡§ø‡§§‡§®‡§æ ‡§π‡•ã‡§ó‡§æ?',
            'option_a': '8',
            'option_b': '10',
            'option_c': '12',
            'option_d': '15',
            'correct_answer': 'B'
        },
        {
            'text': '‡§Ø‡§¶‡§ø A = 1, B = 2, C = 3... ‡§§‡•ã WORD ‡§ï‡§æ ‡§Æ‡§æ‡§® ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•ã‡§ó‡§æ?',
            'option_a': '72',
            'option_b': '73',
            'option_c': '74',
            'option_d': '75',
            'correct_answer': 'A'
        }
    ]
}

print("Creating test papers and questions...")

for paper_data in papers_data:
    paper = TestPaper.objects.create(**paper_data)
    print(f"Created: {paper.title}")
    
    # Add 40 questions for each section (160 total per paper)
    for section, questions in sample_questions.items():
        for i in range(40):
            # Cycle through sample questions
            q_data = questions[i % len(questions)]
            Question.objects.create(
                paper=paper,
                section=section,
                text=f"{q_data['text']} (Q{i+1})",
                option_a=q_data['option_a'],
                option_b=q_data['option_b'],
                option_c=q_data['option_c'],
                option_d=q_data['option_d'],
                correct_answer=q_data['correct_answer'],
                subject=section.replace('_', ' ').title()
            )

print("‚úÖ Successfully created 10 test papers with 160 questions each!")
print("üìä Total: 1600 questions across 4 sections (40 per section)")